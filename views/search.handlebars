<div class="container-search">
  <!-- Home Button -->
  <header>
    <a href="/intern" class="home-btn">
      <div class="home-icon">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="23"
          height="19"
          viewBox="0 0 23 19"
        >
          <g id="Group_55" data-name="Group 55" transform="translate(-95 -92)">
            <circle
              id="Ellipse_11"
              data-name="Ellipse 11"
              cx="4"
              cy="4"
              r="4"
              transform="translate(95 92)"
              fill="#ffaa07"
            />
            <circle
              id="Ellipse_13"
              data-name="Ellipse 13"
              cx="4"
              cy="4"
              r="4"
              transform="translate(107 92)"
              fill="#ffaa07"
            />
            <circle
              id="Ellipse_14"
              data-name="Ellipse 14"
              cx="4"
              cy="4"
              r="4"
              transform="translate(98 103)"
              fill="#ffaa07"
            />
            <circle
              id="Ellipse_15"
              data-name="Ellipse 15"
              cx="4"
              cy="4"
              r="4"
              transform="translate(110 103)"
              fill="#ffaa07"
            />
          </g>
        </svg>
      </div>
      <span>Home</span>
    </a>
  </header>

  <div class="search-container">
    <div class="search-header">
      <h1>Search for a Song</h1>
    </div>
    <div class="search-bar">
      <input type="text" id="song-search" placeholder="Search for a song..." />
      <div
        class="search-icon"
        onclick="makeApiCall(document.getElementById('song-search').value)"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="28.548"
          height="28.548"
          viewBox="0 0 28.548 28.548"
        >
          <path
            id="Icon_open-magnifying-glass"
            data-name="Icon open-magnifying-glass"
            d="M12.378-.01a12.378,12.378,0,0,0,0,24.756..."
            transform="translate(0 0.045)"
            fill="#ffaa07"
          />
        </svg>
      </div>
    </div>
    <div class="results-container">
      <!-- Dynamischer Inhalt wird hier eingefügt -->
    </div>
  </div>
</div>

<script>


const BASE_URL = "https://api.spotify.com/v1/";
const token =
  "BQBy3faFvCXy6cjpxgHRpZ2DKcScWjGkSmMoF2BsOEhd-opNO8ihrzj84kRIdN1BgP5XMjwIUFKsn8aRJ2iaER1kxzK4hNr4ACnYjG81UaeHCNWuR9i5WdE0J8xF2rqgUUnqzGDpYjOsetv5rsUQT5DXIXsQ3G3xmUuR-Ry0IX3B54XVUtLQkDWc7WQam_-q5FxJt6jlZIDlprU5Db6ojU8A6mUfsZMcYIpfg559Uvl_6_DAyCA9atIzbpUvcQjEqJ1_xIuh_sPlPge3v-498lMr8Q2bKCqE";

async function fetchWebApi(songname, page) {
  songname = songname.replace(" ", "+");
  const res = await fetch(
    `${BASE_URL}search?q=${songname}&type=track&offset=${page}&limit=50`,
    {
      headers: {
        Authorization: `Bearer ${token}`,
      },
      method: "GET",
    }
  );
  return await res.json();
}

async function makeApiCall(suchewort) {
  try {
    const result = await fetchWebApi(suchewort, 0);
    printFirstThreeSongs(result);
  } catch (error) {
    console.error("Error fetching API:", error);
  }
}

function printFirstThreeSongs(data) {
  if (data.tracks && data.tracks.items) {
    const resultsContainer = document.querySelector(".results-container");
    resultsContainer.innerHTML = ""; // Vorherige Suchergebnisse löschen

    data.tracks.items.forEach((track) => {
      const resultElement = document.createElement("div");
      resultElement.className = "result-item";

      const albumImg =
        track.album.images[0]?.url || "https://via.placeholder.com/50";

      // Song-Daten anzeigen
      resultElement.innerHTML = `
        <img src="${albumImg}" alt="${track.name}" />
        <div class="result-info">
          <p class="result-title">${track.name}</p>
          <p class="result-artist">${track.artists
            .map((artist) => artist.name)
            .join(", ")}</p>
        </div>
      `;

      // Song speichern und weiterleiten
      resultElement.addEventListener("click", () =>
        handleSongClick(track)
      );

      resultsContainer.appendChild(resultElement);
    });
  } else {
    console.error("No tracks found in the response.");
  }
}

function handleSongClick(track) {
  // Song-Objekt erstellen und in Local Storage speichern
  const selectedSong = {
    id: track.id, // Song-ID aus der API
    name: track.name,
    artists: track.artists.map((artist) => artist.name).join(", "),
    albumImg: track.album.images[0]?.url || "https://via.placeholder.com/120"
  };

  localStorage.setItem("selectedSong", JSON.stringify(selectedSong));
  console.log("Song gespeichert:", selectedSong);

  // Weiterleitung zur Song-Seite
  window.location.href = "/song";
}

</script>